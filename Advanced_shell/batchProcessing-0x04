#!/bin/bash

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
DATA_DIR="pokemon_data_parallel"
mkdir -p "$DATA_DIR"

declare -A PIDS

fetch_pokemon() {
    pokemon="$1"
    echo "Fetching data for $pokemon..."
    response=$(curl -s -w "%{http_code}" -o "$DATA_DIR/$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon")

    if [[ $response == 200 ]]; then
        echo "✅ $pokemon data saved to $DATA_DIR/$pokemon.json"
    else
        echo "❌ Failed to fetch data for $pokemon (HTTP $response)"
        rm -f "$DATA_DIR/$pokemon.json"
    fi
}

# Launch all fetches in the background and save their PIDs
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
    PIDS["$pokemon"]=$!
done

# Monitor all PIDs
for pokemon in "${!PIDS[@]}"; do
    pid=${PIDS[$pokemon]}

    # Optional: Timeout check (e.g., 10s max)
    (sleep 10 && kill -0 "$pid" 2>/dev/null && echo "⚠️ Timeout: Killing $pokemon (PID $pid)" && kill "$pid") &

    wait "$pid"
done

echo "✅ All Pokémon data fetches completed."
