#!/bin/bash

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
DATA_DIR="pokemon_data_parallel"
mkdir -p "$DATA_DIR"

# Array to store process IDs
PIDS=()

fetch_pokemon() {
    pokemon="$1"
    echo "Fetching data for $pokemon..."
    response=$(curl -s -w "%{http_code}" -o "$DATA_DIR/$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon")

    if [[ $response == 200 ]]; then
        echo "✅ $pokemon data saved to $DATA_DIR/$pokemon.json"
    else
        echo "❌ Failed to fetch data for $pokemon (HTTP $response)"
        rm -f "$DATA_DIR/$pokemon.json"
    fi
}

# Start all fetches in the background and store their PIDs
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
    PIDS+=($!)
done

# List background jobs
echo "Running background jobs:"
jobs

# Optional: Kill a process (example only)
# Uncomment to actually terminate one for demo purposes
# echo "Killing one process: ${PIDS[0]}"
# kill "${PIDS[0]}"

# Wait for all processes to complete
for pid in "${PIDS[@]}"; do
    wait "$pid"
done

echo "✅ All Pokémon data fetches completed."
